/*
Gramatica para el Robot:
Autor: Alejandro Arango
Modificado por: Silvia Takahashi
Modificado por: Juan Pablo Morales.
Agregadas producciones para manejar globos
Modificado por Silvia Takahashi


 **/


options 
{
  
	LOOKAHEAD=1; 
	IGNORE_CASE=true;
	STATIC = false;
	
}
   

PARSER_BEGIN(Robot)

package uniandes.lym.robot.control;

import uniandes.lym.robot.kernel.*;
import uniandes.lym.robot.view.Console;
 
import java.awt.Point;
import java.io.*;
import java.util.Vector;
import java.util.LinkedList;

@SuppressWarnings("serial")
public class Robot 
{


	private RobotWorldDec world;
	
	
	void setWorld(RobotWorld w) {
		world = (RobotWorldDec) w;	
	}

	String salida=new String();
}
PARSER_END(Robot)

SKIP:
{
	" "
	|	"\r"
	|	"\t"
	| "\n"
}
// Keywords
TOKEN: 
{
  <ROBOT_R: "ROBOT_R"> 
|  <VARS: "VARS"> 
|  <PROCS: "PROCS"> 
|  <IF: "if"> 
|  <THEN: "then"> 
|  <ELSE: "else"> 
|  <WHILE: "while"> 
|  <DO: "do"> 
|  <REPEAT: "repeat"> 
}

// Commands
TOKEN: 
{
<ASSIGNTO: "assignTo"> 
|  <GOTO: "goto"> 
|  <MOVE: "move"> 
|  <TURN: "turn"> 
|  <FACE: "face"> 
|  <PUT: "put"> 
|  <PICK: "pick"> 
|  <MOVE_TO_THE: "moveToThe"> 
|  <MOVE_IN_DIR: "moveInDir"> 
|  <JUMP_TO_THE: "jumpToThe"> 
|  <JUMP_IN_DIR: "jumpInDir"> 
|  <NOP: "nop"> 
|  <POP: "pop"> 
|  <HOP: "hop"> 
|  <GO: "go"> }


// Conditions
TOKEN: 
{
 <FACING: "facing"> 
|  <CAN_PUT: "canPut"> 
|  <CAN_PICK: "canPick"> 
|  <CAN_MOVE_IN_DIR: "canMoveInDir"> 
|  <CAN_JUMP_IN_DIR: "canJumpInDir"> 
|  <CAN_MOVE_TO_THE: "canMoveToThe"> 
|  <CAN_JUMP_TO_THE: "canJumpToThe"> 
|  <NOT: "not"> 
}

// Other tokens
TOKEN: 
{
<RIGHT: "right"> 
|<FRONT:"front">
|<LEFT:"left">
|<BACK:"back">
|<NORTH: "north">
|<SOUTH: "south">
|<WEST: "west">
|<EAST:"east">
|<LPAREN: "("> 
|<RPAREN: ")"> 
|<LBRACKET: "["> 
|<RBRACKET: "]"> 
|<COMMA: ","> 
|<SEMICOLON: ";"> 
| <PUNTOS : ":">
|<NUMBER: (["0"-"9"])+> 
|<IDENTIFIER: (["a"-"z", "A"-"Z"])(["a"-"z", "A"-"Z", "0"-"9"])*> 
|<CHIPS: "Chips>
|<BALLOONS: "Balloons"> 
}


	//boolean command(uniandes.lym.robot.view.Console sistema) :
	boolean command(Console sistema):
	{	
		int x,y;
		salida=new String();	
	}	
	{
		comandos() {return true;} 
    	| <EOF> {return false;} 
	}
	void comandos():
	{
		int num1;
		int num2;
		string ele1;
		string ele2;
		string ele3;
	}
	{
		(
		<GOTO> <PUNTOS> num1=VerifyVARNum() <COMMA> num2=VerifyVARNum(){world.setPostion(num1,num2)}
		)
	}
	
	void VerifyVARNum():
	{
		int numberI=0;
	}
	{
		(<IDENTIFIER>
		
		
		|<NUMBER>{
			try 
			{
				numberI = Integer.parseInt(token.image);
			} 
			catch (NumberFormatException ee) 
			{
				throw new Error("Number out of bounds: "+token.image+" !!");
			}
			return numberI;
			}
		)
	}


	void VerifyDirection():
	{}
	{
		<RIGHT> | <FRONT> | <LEFT> | <BACK>
	}

	void VerifyDirection1():
	{}
	{
		<NORTH> | <SOUTH> | <WEST> | <EAST>
	}
